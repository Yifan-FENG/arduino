/**
 * Shows Mario on the OLED screen
 * 
 * Based on the tutorial by Last Minute Engineers:
 * https://lastminuteengineers.com/oled-display-arduino-tutorial/
 * 
 * To create the byte dumps of the images, I used the image2cpp tool here: 
 * http://javl.github.io/image2cpp/
 * 
 * By Jon E. Froehlich
 * @jonfroehlich
 * http://makeabilitylab.io
 *
 */

#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 64 // OLED display height, in pixels

// Declaration for an SSD1306 display connected to I2C (SDA, SCL pins)
#define OLED_RESET     4 // Reset pin # (or -1 if sharing Arduino reset pin)
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

// This mario has a transparent background
// // 'MarioBlackAndWhite copy', 24x40px
// const unsigned char Mario_BlackAndWhite_Bitmap [] PROGMEM = {
// 	0x00, 0x20, 0x00, 0x01, 0x00, 0x60, 0x00, 0x1f, 0x20, 0x04, 0xff, 0x20, 0x01, 0xff, 0x04, 0x03, 
// 	0xf0, 0x04, 0x27, 0x80, 0x00, 0x27, 0x16, 0x82, 0x26, 0x3f, 0xc4, 0x40, 0x79, 0x80, 0x00, 0x79, 
// 	0x04, 0x1c, 0x79, 0x86, 0x1c, 0x3f, 0xfa, 0x1c, 0x3f, 0xfa, 0x1e, 0x73, 0xfa, 0x07, 0xe0, 0xf0, 
// 	0x35, 0xe8, 0x42, 0x20, 0xfc, 0x04, 0x20, 0x7f, 0x28, 0x5e, 0x00, 0xe0, 0x5e, 0x00, 0x1c, 0x5e, 
// 	0x0e, 0x00, 0x1c, 0xf7, 0x0a, 0x3d, 0xf3, 0x9a, 0x33, 0xf9, 0xd8, 0x33, 0xf9, 0xc2, 0x3b, 0xf9, 
// 	0xc4, 0x1c, 0xf2, 0x20, 0x80, 0x0e, 0x30, 0x40, 0x0e, 0x20, 0x00, 0x00, 0x00, 0x20, 0x00, 0x02, 
// 	0x60, 0x00, 0x01, 0x18, 0x00, 0x1c, 0x18, 0x08, 0x3c, 0x18, 0x04, 0x7c, 0x1c, 0x02, 0xf8, 0x2f, 
// 	0xe2, 0xf2, 0x27, 0xc2, 0x64, 0x00, 0x00, 0x00
// };

// 'MarioBlackAndWhite copy', 24x40px
const unsigned char Mario_BlackAndWhite_Bitmap [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0xff, 0x00, 0x01, 0xff, 0x00, 0x03, 
	0xf0, 0x00, 0x07, 0x80, 0x00, 0x07, 0x16, 0x80, 0x06, 0x3f, 0xc0, 0x00, 0x79, 0x80, 0x00, 0x79, 
	0x00, 0x1c, 0x79, 0x80, 0x1c, 0x3f, 0xf8, 0x1c, 0x3f, 0xf8, 0x1e, 0x73, 0xf8, 0x07, 0xe0, 0xf0, 
	0x05, 0xe8, 0x40, 0x00, 0xfc, 0x00, 0x00, 0x7f, 0x00, 0x1e, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x1e, 
	0x0e, 0x00, 0x1c, 0xf7, 0x08, 0x3d, 0xf3, 0x98, 0x33, 0xf9, 0xd8, 0x33, 0xf9, 0xc0, 0x3b, 0xf9, 
	0xc0, 0x1c, 0xf2, 0x20, 0x00, 0x0e, 0x30, 0x00, 0x0e, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x18, 0x00, 0x1c, 0x18, 0x00, 0x3c, 0x18, 0x00, 0x7c, 0x1c, 0x00, 0xf8, 0x0f, 
	0xe0, 0xf0, 0x07, 0xc0, 0x60, 0x00, 0x00, 0x00
};

const int MARIO_WIDTH = 24;
const int MARIO_HEIGHT = 40;


void setup() {
  Serial.begin(9600);

  // SSD1306_SWITCHCAPVCC = generate display voltage from 3.3V internally
  if(!display.begin(SSD1306_SWITCHCAPVCC, 0x3D)) { // Address 0x3D for 128x64
    Serial.println(F("SSD1306 allocation failed"));
    for(;;); // Don't proceed, loop forever
  }

  display.clearDisplay();

  // Center mario
  int xCenter = display.width() / 2 - MARIO_WIDTH / 2;
  int yCenter = display.height() / 2 - MARIO_HEIGHT / 2;
  display.drawBitmap(xCenter, yCenter,  Mario_BlackAndWhite_Bitmap, MARIO_WIDTH, MARIO_HEIGHT, WHITE);
  display.display();
}

void loop() {
  // Nothing here since Mario doesn't move
}
